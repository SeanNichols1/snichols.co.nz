{"ast":null,"code":"var _jsxFileName = \"C:\\\\snichols.co.nz\\\\snichols1\\\\src\\\\HauntedPika.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport './HauntedPika.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Haunted = ({\n  onChoice\n}) => {\n  _s();\n  const [cast, setCast] = useState([]); /* Setting a constant for holding data. useState will generate the state */\n\n  async function fetchStuff() {\n    // Async function expects something to be returned. \n    const response = await fetch('cast.json'); // Can only use Await in an async function. Pauses function until promosed thing is resolved\n    setCast(await response.json());\n  }\n  const initialized = useRef(false); //Determines if initialized\n\n  useEffect(() => {\n    if (!initialized.current) {\n      //If intialised is currently false fetches cast.json file. \n      initialized.current = true; //Sets the constant to true to avoid fetching the data again. \n      fetchStuff();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"columbus\",\n      style: {\n        backdropFilter: \"blur(100px)\",\n        textAlign: 'left',\n        width: \"device-width\",\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"details\", {\n            role: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              role: \"listitem\",\n              style: {\n                fontSize: \"20px\",\n                color: \"Yellow\"\n              },\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              role: \"listbox\",\n              style: {\n                backdropFilter: \"blur(100px)\"\n              },\n              children: cast.map(sean => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => {\n                    onChoice(sean);\n                  },\n                  \"data-tooltip\": sean.name,\n                  children: /*#__PURE__*/_jsxDEV(\"u\", {\n                    children: [\"This is \", sean.name, \" \", sean.bio]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 108\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 45\n                }, this)\n              }, sean.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          position: 'absolute',\n          left: \"-20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./images/hauntedPikachu.png\",\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                height: '50px'\n              },\n              src: \"./favicon.ico\",\n              alt: \"React\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 80\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          position: 'absolute',\n          right: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./images/cursedPikachu.png\",\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                height: '50px'\n              },\n              src: \"./favicon.ico\",\n              alt: \"React\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 79\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: 'repeat(auto-fit, minmax(0px, 1fr))',\n        gap: '1rem',\n        marginBottom: '1rem'\n      },\n      children: cast.map(sean =>\n      /*#__PURE__*/\n      /* onClick means when clicked, it sends the data back through export on line 3 to App.jsx and show the details*/\n      _jsxDEV(\"a\", {\n        href: \"#thisModalWasHiddenBecauseItWasAnnoying\",\n        onClick: () => {\n          onChoice(sean);\n        },\n        \"data-toolip\": sean.name,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `images/${sean.slug}.png`,\n          alt: sean.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, sean.slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) /* Have to use the ridiculous ` ` things to close any text that has ${} in it */)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Haunted, \"K01QqpZA6tVh+QcaXGvrb6zfpDo=\");\n_c = Haunted;\nexport default Haunted; // Exports the return() html back to app.jsx for the DOM\nvar _c;\n$RefreshReg$(_c, \"Haunted\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","Haunted","onChoice","_s","cast","setCast","fetchStuff","response","fetch","json","initialized","current","children","className","style","backdropFilter","textAlign","width","margin","role","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","map","sean","onClick","name","bio","id","position","left","href","target","height","src","alt","right","display","gridTemplateColumns","gap","marginBottom","slug","_c","$RefreshReg$"],"sources":["C:/snichols.co.nz/snichols1/src/HauntedPika.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport './HauntedPika.css';\r\n\r\nconst Haunted = ({onChoice}) => {\r\n    const [cast, setCast] = useState([]); /* Setting a constant for holding data. useState will generate the state */\r\n\r\n    async function fetchStuff(){        // Async function expects something to be returned. \r\n        const response = await fetch('cast.json') // Can only use Await in an async function. Pauses function until promosed thing is resolved\r\n        setCast(await response.json());\r\n    }\r\n\r\n    const initialized = useRef(false);  //Determines if initialized\r\n\r\n    useEffect(() => {\r\n        if (!initialized.current) { //If intialised is currently false fetches cast.json file. \r\n            initialized.current = true //Sets the constant to true to avoid fetching the data again. \r\n            fetchStuff();\r\n        }\r\n        }, [])\r\n\r\n\r\n    return ( \r\n        <span>\r\n            <nav className=\"columbus\" style={{ backdropFilter: \"blur(100px)\",textAlign:'left',width:\"device-width\",margin:\"0 auto\" }}>\r\n                <ul>\r\n                    <li>\r\n                        <details role=\"list\">\r\n                            <summary role=\"listitem\" style={{fontSize:\"20px\", color:\"Yellow\"}} >Menu</summary>\r\n                            <ul role=\"listbox\" style={{ backdropFilter:\"blur(100px)\" }}>\r\n                                {\r\n                                    cast.map(sean => (\r\n                                        <li key={sean.id}>\r\n                                            <a onClick={() => { onChoice(sean) }} data-tooltip={sean.name}><u>This is {sean.name} {sean.bio}</u></a>\r\n                                        </li>\r\n                                    )\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </details>\r\n                    </li>\r\n                </ul>\r\n                <ul style={{ position: 'absolute', left: \"-20px\" }}>\r\n                    <li>\r\n                        <a href=\"./images/hauntedPikachu.png\" target=\"_blank\" ><img style={{ height: '50px'} } src=\"./favicon.ico\" alt=\"React\"/></a>\r\n                    </li>\r\n                </ul>\r\n                <ul style={{ position: 'absolute', right: \"20px\" }}>\r\n                    <li>\r\n                        <a href=\"./images/cursedPikachu.png\" target=\"_blank\" ><img style={{ height: '50px' }} src=\"./favicon.ico\" alt=\"React\" /></a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: 'repeat(auto-fit, minmax(0px, 1fr))',\r\n            gap: '1rem',\r\n            marginBottom: '1rem'\r\n        }}>\r\n            {\r\n                cast.map(sean => ( /* onClick means when clicked, it sends the data back through export on line 3 to App.jsx and show the details*/\r\n                    <a href=\"#thisModalWasHiddenBecauseItWasAnnoying\" onClick={() => { onChoice(sean) }} key={sean.slug} data-toolip={sean.name}> \r\n                    <img src={`images/${sean.slug}.png`} alt={sean.name} /> \r\n                    </a>/* Have to use the ridiculous ` ` things to close any text that has ${} in it */\r\n                ))\r\n            }\r\n        </div>\r\n        </span>\r\n    )\r\n} \r\nexport default Haunted; // Exports the return() html back to app.jsx for the DOM"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}