{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean N\\\\source\\\\repos\\\\SeanNichols1\\\\snichols.co.nz\\\\snichols1\\\\src\\\\HauntedPika.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { useState, useEffect } from 'react';\n\nconst Haunted = ({\n  pikaPika,\n  onChoice\n}) => {\n  /* const [cast, setCast] = useState([]);  */ //Setting a constant for holding data. useState will generate the state\n  /*\r\n  async function fetchStuff(){\r\n      const response = await fetch('cast.json')\r\n      setCast(await response.json());\r\n  }\r\n    useEffect(() => { fetchStuff(); });\r\n  */ //Moved to main document\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: 'repeat(auto-fit, minmax(0px, 1fr))',\n      gap: '1rem',\n      marginBottom: '1rem'\n    },\n    children: cast.map(sean =>\n    /*#__PURE__*/\n    /* onClick means when clicked, it sends the data back through export on line 3 to App.jsx and show the details*/\n    _jsxDEV(\"a\", {\n      href: \"#thisModalIsHiddenBecauseItWasAnnoying\",\n      onClick: () => {\n        onChoice(sean);\n      },\n      \"data-toolip\": sean.name,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `images/${sean.slug}.png`,\n        alt: sean.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, sean.slug, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this) /* Have to use the ridiculous ` ` things to close any text that has ${} in it */)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Haunted;\nexport default Haunted;\nvar _c;\n$RefreshReg$(_c, \"Haunted\");","map":{"version":3,"names":["Haunted","pikaPika","onChoice","_jsxDEV","style","display","gridTemplateColumns","gap","marginBottom","children","cast","map","sean","href","onClick","name","src","slug","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sean N/source/repos/SeanNichols1/snichols.co.nz/snichols1/src/HauntedPika.jsx"],"sourcesContent":["// import { useState, useEffect } from 'react';\r\n\r\nconst Haunted = ({pikaPika, onChoice}) => {\r\n    /* const [cast, setCast] = useState([]);  */ //Setting a constant for holding data. useState will generate the state\r\n    /*\r\n    async function fetchStuff(){\r\n        const response = await fetch('cast.json')\r\n        setCast(await response.json());\r\n    }\r\n\r\n    useEffect(() => { fetchStuff(); });\r\n    */ //Moved to main document\r\n    return (\r\n        <div style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: 'repeat(auto-fit, minmax(0px, 1fr))',\r\n            gap: '1rem',\r\n            marginBottom: '1rem'\r\n        }}>\r\n            {\r\n                cast.map(sean => ( /* onClick means when clicked, it sends the data back through export on line 3 to App.jsx and show the details*/\r\n                    <a href=\"#thisModalIsHiddenBecauseItWasAnnoying\" onClick={() => { onChoice(sean) }} key={sean.slug} data-toolip={sean.name}> \r\n                    <img src={`images/${sean.slug}.png`} alt={sean.name} /> \r\n                    </a>/* Have to use the ridiculous ` ` things to close any text that has ${} in it */\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Haunted;"],"mappings":";;AAAA;;AAEA,MAAMA,OAAO,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EACtC,6CAA6C;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA,IANI,CAOG;EACH,oBACIC,OAAA;IAAKC,KAAK,EAAE;MACRC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE,oCAAoC;MACzDC,GAAG,EAAE,MAAM;MACXC,YAAY,EAAE;IAClB,CAAE;IAAAC,QAAA,EAEMC,IAAI,CAACC,GAAG,CAACC,IAAI;IAAA;IAAM;IACfT,OAAA;MAAGU,IAAI,EAAC,wCAAwC;MAACC,OAAO,EAAEA,CAAA,KAAM;QAAEZ,QAAQ,CAACU,IAAI,CAAC;MAAC,CAAE;MAAiB,eAAaA,IAAI,CAACG,IAAK;MAAAN,QAAA,eAC3HN,OAAA;QAAKa,GAAG,EAAG,UAASJ,IAAI,CAACK,IAAK,MAAM;QAACC,GAAG,EAAEN,IAAI,CAACG;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADkCV,IAAI,CAACK,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/F,CAAC,iFACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAC,EAAA,GA1BKvB,OAAO;AA2Bb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}