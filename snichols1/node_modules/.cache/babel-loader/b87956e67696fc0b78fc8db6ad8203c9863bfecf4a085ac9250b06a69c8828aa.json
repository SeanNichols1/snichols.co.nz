{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean N\\\\source\\\\repos\\\\SeanNichols1\\\\snichols.co.nz\\\\snichols1\\\\src\\\\Modals.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalObject = ({\n  member,\n  thingInfo,\n  handleClose,\n  handleChange\n}) => {\n  _s();\n  const [cast, setCast] = useState([]); /* Setting a constant for holding data. useState will generate the state */\n\n  async function fetchStuff() {\n    // Async function expects something to be returned. \n    const response = await fetch('cast.json'); // Can only use Await in an async function. Pauses function until promosed thing is resolved\n    setCast(await response.json());\n  }\n  const initialized = useRef(false); //Determines if initialized\n\n  useEffect(() => {\n    if (!initialized.current) {\n      //If intialised is currently false fetches cast.json file. \n      initialized.current = true; //Sets the constant to true to avoid fetching the data again. \n      fetchStuff();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"dialog\", {\n    id: \"modal-thing\",\n    open: true,\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#pika\",\n        \"aria-label\": \"Close\",\n        className: \"close\",\n        \"data-target\": \"modal-thing\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hgroup\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [member.name, \", ID #\", member.id, \" in a modal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pika\",\n          children: member.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hgroup\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: \"red\"\n          },\n          href: \"#pika\",\n          role: \"button\",\n          \"aria-label\": \"Next\",\n          className: \"outline\",\n          onClick: () => {\n            handleChange(Number(member.id) + 1);\n          },\n          children: \"Next \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            color: \"green\"\n          },\n          href: \"#pika\",\n          role: \"button\",\n          \"aria-label\": \"Previous\",\n          className: \"outline\",\n          onClick: () => {\n            handleChange(Number(member.id) - 1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(modalObject, \"K01QqpZA6tVh+QcaXGvrb6zfpDo=\");\nexport default modalObject;","map":{"version":3,"names":["modalObject","member","thingInfo","handleClose","handleChange","_s","cast","setCast","useState","fetchStuff","response","fetch","json","initialized","useRef","useEffect","current","_jsxDEV","id","open","children","href","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","bio","style","color","role","Number"],"sources":["C:/Users/Sean N/source/repos/SeanNichols1/snichols.co.nz/snichols1/src/Modals.jsx"],"sourcesContent":["const modalObject = ({member, thingInfo, handleClose, handleChange}) => {\r\n    const [cast, setCast] = useState([]); /* Setting a constant for holding data. useState will generate the state */\r\n\r\n    async function fetchStuff() {        // Async function expects something to be returned. \r\n        const response = await fetch('cast.json') // Can only use Await in an async function. Pauses function until promosed thing is resolved\r\n        setCast(await response.json());\r\n    }\r\n\r\n    const initialized = useRef(false);  //Determines if initialized\r\n\r\n    useEffect(() => {\r\n        if (!initialized.current) { //If intialised is currently false fetches cast.json file. \r\n            initialized.current = true //Sets the constant to true to avoid fetching the data again. \r\n            fetchStuff();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <dialog id=\"modal-thing\" open>\r\n            <article>\r\n                <a href=\"#pika\" aria-label=\"Close\" className=\"close\" data-target=\"modal-thing\" onClick={handleClose}>Close</a>\r\n            <hgroup>\r\n                    <h3>{member.name}, ID #{member.id} in a modal</h3>\r\n                    <p id=\"pika\">{member.bio}</p>\r\n            </hgroup>\r\n            <hgroup>\r\n                    <a style={{ color: \"red\" }} href=\"#pika\" role=\"button\" aria-label=\"Next\" className=\"outline\" onClick={() => {\r\n                        handleChange(Number(member.id) + 1)\r\n                    }}>Next </a>\r\n                    <a style={{ color: \"green\" }} href=\"#pika\" role=\"button\" aria-label=\"Previous\" className=\"outline\"  onClick={() => {\r\n                        handleChange(Number(member.id) - 1)\r\n                    }}>Previous</a>\r\n            </hgroup>\r\n            </article>\r\n        </dialog>\r\n    )\r\n}\r\n\r\nexport default modalObject;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}