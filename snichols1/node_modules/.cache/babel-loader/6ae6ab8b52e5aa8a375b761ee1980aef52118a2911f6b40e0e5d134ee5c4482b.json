{"ast":null,"code":"import{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const useSupportTeam=thingInfo=>{//This must be called useXXXXXXXXX\nconst[count,setCount]=useState(0);//square brackets are an array\n// The following is messy\n/*return (\r\n        <button className=\"outline\" onClick={() => setCount(count + 1)}>\r\n        \r\n            {(() => {\r\n                if (count === 0) {\r\n                    return `Number of times supported: ${count}`; //Must use backticks which is next to the number 1 on the keyboard ```````````````\r\n                }\r\n                else {\r\n                    return `Thanks! - Number:${count}`\r\n                }\r\n            })()\r\n            }*/useEffect(()=>{//useEffect tells react to make changes to the dom if x occurs - if count changes\n//if (count >= 0) {document.title = `You have clicked ${count} times`}})\ncount&&(document.title=\"You have clicked \".concat(count,\" times\"));//console.log(thingInfo)\n});// Use a turnary statement instead to keep it shorter\nreturn/*#__PURE__*/_jsx(\"button\",{className:\"outline\",onClick:()=>setCount(count+1),children:count===0?\"Number of times supported: \".concat(count):\"Thanks! - Number of times supported: \".concat(count)});};export default useSupportTeam;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","useSupportTeam","thingInfo","count","setCount","document","title","concat","className","onClick","children"],"sources":["C:/Users/Sean N/source/repos/SeanNichols1/snichols.co.nz/snichols1/src/Support.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useSupportTeam = (thingInfo) => { //This must be called useXXXXXXXXX\r\n    const [count, setCount] = useState(0) //square brackets are an array\r\n    // The following is messy\r\n    /*return (\r\n        <button className=\"outline\" onClick={() => setCount(count + 1)}>\r\n        \r\n            {(() => {\r\n                if (count === 0) {\r\n                    return `Number of times supported: ${count}`; //Must use backticks which is next to the number 1 on the keyboard ```````````````\r\n                }\r\n                else {\r\n                    return `Thanks! - Number:${count}`\r\n                }\r\n            })()\r\n            }*/\r\n    useEffect(() => { //useEffect tells react to make changes to the dom if x occurs - if count changes\r\n        //if (count >= 0) {document.title = `You have clicked ${count} times`}})\r\n        count && (document.title = `You have clicked ${count} times`)\r\n        //console.log(thingInfo)\r\n    })\r\n\r\n    // Use a turnary statement instead to keep it shorter\r\n    return (\r\n        <button className=\"outline\" onClick={() => setCount(count + 1)}>\r\n            {count === 0 ? `Number of times supported: ${count}` : `Thanks! - Number of times supported: ${count}`}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default useSupportTeam;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,cAAc,CAAIC,SAAS,EAAK,CAAE;AACpC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtC;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eACIC,SAAS,CAAC,IAAM,CAAE;AACd;AACAK,KAAK,GAAKE,QAAQ,CAACC,KAAK,qBAAAC,MAAA,CAAuBJ,KAAK,UAAQ,CAAC,CAC7D;AACJ,CAAC,CAAC,CAEF;AACA,mBACIH,IAAA,WAAQQ,SAAS,CAAC,SAAS,CAACC,OAAO,CAAEA,CAAA,GAAML,QAAQ,CAACD,KAAK,CAAG,CAAC,CAAE,CAAAO,QAAA,CAC1DP,KAAK,GAAK,CAAC,+BAAAI,MAAA,CAAiCJ,KAAK,0CAAAI,MAAA,CAA6CJ,KAAK,CAAE,CAClG,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}