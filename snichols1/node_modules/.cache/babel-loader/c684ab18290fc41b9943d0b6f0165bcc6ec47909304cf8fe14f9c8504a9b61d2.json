{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean N\\\\source\\\\repos\\\\SeanNichols1\\\\snichols.co.nz\\\\snichols1\\\\src\\\\Support.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supportTeam = () => {\n  _s();\n  const [count, setCount] = useState(0); //square brackets are an array\n  // The following is messy\n  /*return (\r\n      <button className=\"outline\" onClick={() => setCount(count + 1)}>\r\n      \r\n          {(() => {\r\n              if (count === 0) {\r\n                  return `Number of times supported: ${count}`; //Must use backticks which is next to the number 1 on the keyboard ```````````````\r\n              }\r\n              else {\r\n                  return `Thanks! - Number:${count}`\r\n              }\r\n          })()\r\n          }*/\n  useEffect(() => {\n    //useEffect tells react to make changes to the dom if x occurs - if count changes\n    //if (count >= 0) {document.title = `You have clicked ${count} times`}})\n    count && (document.title = `You have clicked ${count} times`);\n  });\n\n  // Use a turnary statement instead to keep it shorter\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"outline\",\n    onClick: () => setCount(count + 1),\n    children: count === 0 ? `Number of times supported: ${count}` : `Thanks! - Number:${count}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(supportTeam, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\nexport default supportTeam;","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","supportTeam","_s","count","setCount","document","title","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Sean N/source/repos/SeanNichols1/snichols.co.nz/snichols1/src/Support.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst supportTeam = () => {\r\n    const [count, setCount] = useState(0) //square brackets are an array\r\n    // The following is messy\r\n    /*return (\r\n        <button className=\"outline\" onClick={() => setCount(count + 1)}>\r\n        \r\n            {(() => {\r\n                if (count === 0) {\r\n                    return `Number of times supported: ${count}`; //Must use backticks which is next to the number 1 on the keyboard ```````````````\r\n                }\r\n                else {\r\n                    return `Thanks! - Number:${count}`\r\n                }\r\n            })()\r\n            }*/\r\n    useEffect(() => { //useEffect tells react to make changes to the dom if x occurs - if count changes\r\n        //if (count >= 0) {document.title = `You have clicked ${count} times`}})\r\n        count && (document.title = `You have clicked ${count} times`)\r\n    })\r\n\r\n    // Use a turnary statement instead to keep it shorter\r\n    return (\r\n        <button className=\"outline\" onClick={() => setCount(count + 1)}>\r\n            {count === 0 ? `Number of times supported: ${count}` : `Thanks! - Number:${count}`}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default supportTeam;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,EAAC;EACtC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,SAAS,CAAC,MAAM;IAAE;IACd;IACAK,KAAK,KAAKE,QAAQ,CAACC,KAAK,GAAI,oBAAmBH,KAAM,QAAO,CAAC;EACjE,CAAC,CAAC;;EAEF;EACA,oBACIH,OAAA;IAAQO,SAAS,EAAC,SAAS;IAACC,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;IAAAM,QAAA,EAC1DN,KAAK,KAAK,CAAC,GAAI,8BAA6BA,KAAM,EAAC,GAAI,oBAAmBA,KAAM;EAAC;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEjB,CAAC;AAAAX,EAAA,CA1BKD,WAAW;AA4BjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}