{"ast":null,"code":"var _jsxFileName = \"C:\\\\snichols.co.nz\\\\snichols1\\\\src\\\\ListCast.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  const [cast, setCast] = useState([]); /* Setting a constant for holding data. useState will generate the state */\n\n  async function fetchStuff() {\n    const response = await fetch('cast.json');\n    setCast(await response.json());\n  }\n  useEffect(() => {\n    fetchStuff();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: 'repeat(auto-fit, minmax(90px, 1fr))',\n      gap: '1rem',\n      marginBottom: '1rem'\n    },\n    children: cast.map(sean => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `images/${sean.slug}.png`,\n      alt: sean.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this) /* Have to use the ridiculous ` ` things to close any text that has ${} in it */)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}, \"AdIVhaH7Hx6re/u/3OnvwdzRW0I=\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","_s","cast","setCast","fetchStuff","response","fetch","json","style","display","gridTemplateColumns","gap","marginBottom","children","map","sean","src","slug","alt","name","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/snichols.co.nz/snichols1/src/ListCast.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default () => {\r\n    const [cast, setCast] = useState([]); /* Setting a constant for holding data. useState will generate the state */\r\n\r\n    async function fetchStuff(){\r\n        const response = await fetch('cast.json')\r\n        setCast(await response.json());\r\n    }\r\n\r\n    useEffect(() => { fetchStuff(); });\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: 'repeat(auto-fit, minmax(90px, 1fr))',\r\n            gap: '1rem',\r\n            marginBottom: '1rem'\r\n        }}>\r\n            {\r\n                cast.map(sean => (\r\n                    <img src={`images/${sean.slug}.png`} alt={sean.name} /> /* Have to use the ridiculous ` ` things to close any text that has ${} in it */\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAAC,EAAA,CAAe,MAAM;EAAAA,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtC,eAAeO,UAAUA,CAAA,EAAE;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;IACzCH,OAAO,CAAC,MAAME,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;EAClC;EAEAT,SAAS,CAAC,MAAM;IAAEM,UAAU,CAAC,CAAC;EAAE,CAAC,CAAC;EAElC,oBACIJ,OAAA;IAAKQ,KAAK,EAAE;MACRC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE,qCAAqC;MAC1DC,GAAG,EAAE,MAAM;MACXC,YAAY,EAAE;IAClB,CAAE;IAAAC,QAAA,EAEMX,IAAI,CAACY,GAAG,CAACC,IAAI,iBACTf,OAAA;MAAKgB,GAAG,EAAG,UAASD,IAAI,CAACE,IAAK,MAAM;MAACC,GAAG,EAAEH,IAAI,CAACI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,gFAC3D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}